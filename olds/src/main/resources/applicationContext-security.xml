<?xml version="1.0" encoding="UTF-8"?>

<!-- - Sample namespace-based configuration - -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<debug /> <!--should only in develop system -->

	<global-method-security pre-post-annotations="enabled" />

	<http pattern="/**/*.js"  security="none" /><!--  css ,js file -->
	<http pattern="/**/*.css" security="none" /><!--  css ,js file -->
	<http pattern="/**/*.jpg" security="none" /><!--  css ,js file -->
	<http pattern="/**/*.png" security="none" /><!--  css ,js file -->
	<http pattern="/**/*.gif" security="none" /><!--  css ,js file -->
	<http pattern="/**/*.icon" security="none" /><!--  css ,js file -->
	<http pattern="/**/*.ico" security="none" /><!--  css ,js file -->
	
	<!-- security url config  -->
	<http use-expressions="true">
	
		<intercept-url pattern="/config/**" access="hasRole('admin')" />
		<intercept-url pattern="/secure/**" access="isAuthenticated()" />
		<!-- Allow all other requests. In a real application you should adopt a 
			whitelisting approach where access is not allowed by default -->
		<intercept-url pattern="/**" access="isAuthenticated()" /><!-- 
			permitAll -->
			
	<!-- 	<form-login login-page="/portal/login.jsp"
			default-target-url="/portal/main.jsp"
			always-use-default-target="true"
			authentication-failure-url="/portal/login.jsp?login_error=1" /> -->
			
		<!-- spring 默认 -->
		<form-login ></form-login>
		
<!-- 		<logout logout-success-url="/portal/login.jsp"
			delete-cookies="JSESSIONID" invalidate-session="true" /> -->
			
		<remember-me />
		<!-- Uncomment to enable X509 client authentication support <x509 /> -->
		<!-- Uncomment to limit the number of sessions a user can have -->
		<session-management invalid-session-url="/">
			<concurrency-control max-sessions="10"
				error-if-maximum-exceeded="false" />
		</session-management>	
	</http>
	
	<!-- Automatically receives AuthenticationEvent messages -->
    <beans:bean id="loggerListener" class="org.springframework.security.authentication.event.LoggerListener"/>

	<!-- 
		-user authentication： using database with password encoder('md5') and salt(username)
		-admin/admin 
		-user/user 
	-->
	
	<authentication-manager>
		<authentication-provider user-service-ref='myUserDetailsService'>
 			<password-encoder hash="md5">
 				<salt-source user-property="username" />
 			</password-encoder>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="myUserDetailsService"
		class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

</beans:beans>
